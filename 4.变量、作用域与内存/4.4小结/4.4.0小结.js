/* 
  js变量可以保存原始值和引用值。
  原始值：Undefined、Null、Boolean、Number、String、Symbol

  原始值特点：
    1.原始值大小固定，因此保存在栈内存上。
    2.从一个变量到另一个变量赋值原始值会创建该值的第二个副本。
    

  引用值特点：
    1.引用值是对象，存储再堆内存上。
    2.包含引用值的变量实际上值包含指向对象的一个指针，而不是对象本身。
    3.从一个变量到另一个变量复制引用指挥赋值指针，两个变量都指向同一个对象。
  
  typeof能确定值的原始类型，instanceof用于确保值的引用类型。

================================================================

  任何变量都存在于某个执行上下文中（也称为作用域）。这个上下文（作用域）决定了
    变量的生命周期，以及它们可以访问代码的那些部分。
  
  执行上下文（作用域）总结：
    1.执行上下文分全局上下文、函数上下文、块级上下文。
    2.代码执行流每进入一个新上下文，都会创建一个作用域链，用于搜索变量和函数。
    3.函数或块的上下文可以访问自己作用域的变量、包含上下文和全局上下文中的变量。
    4.全局上下文只能访问全局上下文中的变量和函数，不能直接访问局部上下文中的任何数据。
    5.变量的执行上下文用于确定什么时候释放内存。

  js是使用垃圾回收编程语言，开发者不需要操心内存分配和回收。
  垃圾回收总结：
    1.离开作用域的值会被自动标记为可回收，然后在垃圾回收期间被删除。
    2.主流的垃圾回收算法是标记清理，即先给当前不使用的值加上标记，再回来回收它们的内存。
    3.引用计数是另一种垃圾回收策略，需要记录值被引用了多少次。
    4.引用计数在代码中存在循环引用时会出现问题。
    5.解除变量的引用不仅可以消除循环引用，而且对垃圾回收也有帮助。
        为促进内存回收，全局对象、全局对象的属性和循环引用都应该在不需要时解除引用。
*/
